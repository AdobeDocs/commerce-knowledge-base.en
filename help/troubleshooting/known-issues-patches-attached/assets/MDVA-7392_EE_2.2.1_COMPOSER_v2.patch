diff --git a/vendor/magento/module-staging/Model/ResourceModel/Update.php b/vendor/magento/module-staging/Model/ResourceModel/Update.php
index b7061752ce..578912edf0 100644
--- a/vendor/magento/module-staging/Model/ResourceModel/Update.php
+++ b/vendor/magento/module-staging/Model/ResourceModel/Update.php
@@ -3,6 +3,9 @@
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
+
+declare(strict_types=1);
+
 namespace Magento\Staging\Model\ResourceModel;
 
 use Magento\Framework\App\ResourceConnection;
@@ -101,6 +104,7 @@ class Update extends AbstractDb
      */
     public function getMaxIdByTime($timestamp)
     {
+        $timestamp = (int)$timestamp;
         if (!isset($this->versionCache[$timestamp])) {
             $date = new \DateTime();
             $date->setTimestamp($timestamp);
@@ -115,6 +119,24 @@ class Update extends AbstractDb
     }
 
     /**
+     * Check for update entities associated with rollback_id
+     * Receives optional parameter $ignoredUpdates with array of update ids which will be filtered in request
+     *
+     * @param int $rollbackId
+     * @param array $ignoredUpdates
+     * @return bool
+     */
+    public function isRollbackAssignedToUpdates(int $rollbackId, array $ignoredUpdates = []): bool
+    {
+        $select = $this->getConnection()->select()
+            ->from($this->getMainTable())
+            ->where('rollback_id = ?', $rollbackId)
+            ->where('id NOT IN (?)', $ignoredUpdates)
+            ->limit(1);
+        return (bool)$this->getConnection()->fetchOne($select);
+    }
+
+    /**
      * @inheritdoc
      */
     protected function processAfterSaves(\Magento\Framework\Model\AbstractModel $object)
diff --git a/vendor/magento/module-staging/Model/UpdateRepository.php b/vendor/magento/module-staging/Model/UpdateRepository.php
index 7b914422e2..544b454175 100644
--- a/vendor/magento/module-staging/Model/UpdateRepository.php
+++ b/vendor/magento/module-staging/Model/UpdateRepository.php
@@ -140,7 +140,10 @@ class UpdateRepository implements UpdateRepositoryInterface
                 throw new CouldNotDeleteException(__('Active update can not be deleted'));
             }
             $rollbackId = $entity->getRollbackId();
-            if ($rollbackId && $rollbackId !== $this->getVersionMaxIdByTime(time())) {
+            if ($rollbackId
+                && $rollbackId !== $this->getVersionMaxIdByTime(time())
+                && $this->resource->isRollbackAssignedToUpdates($rollbackId, [$entity->getId()]) === false
+            ) {
                 $this->resource->delete($this->get($rollbackId));
             }
             $this->resource->delete($entity);
diff --git a/vendor/magento/module-staging/Model/VersionManager.php b/vendor/magento/module-staging/Model/VersionManager.php
index aa61d325f4..69ea565131 100644
--- a/vendor/magento/module-staging/Model/VersionManager.php
+++ b/vendor/magento/module-staging/Model/VersionManager.php
@@ -139,7 +139,7 @@ class VersionManager
             $this->requestedTimestamp = $requestedTimestamp;
         }
 
-        return $this->requestedTimestamp;
+        return (int)$this->requestedTimestamp;
     }
 
     /**
