diff --git a/vendor/magento/module-dhl/Model/Carrier.php b/vendor/magento/module-dhl/Model/Carrier.php
index 45a97e22878..2b3dc22a699 100644
--- a/vendor/magento/module-dhl/Model/Carrier.php
+++ b/vendor/magento/module-dhl/Model/Carrier.php
@@ -1533,7 +1533,7 @@ class Carrier extends \Magento\Dhl\Model\AbstractDhl implements \Magento\Shippin
 
         $responseBody = $this->_getCachedQuotes($request);
         if ($responseBody === null) {
-            $debugData = ['request' => $request];
+            $debugData = ['request' => $this->filterDebugData($request)];
             try {
                 /** @var \Magento\Framework\HTTP\ZendClient $client */
                 $client = $this->_httpClientFactory->create();
@@ -1542,7 +1542,7 @@ class Carrier extends \Magento\Dhl\Model\AbstractDhl implements \Magento\Shippin
                 $client->setRawData($request);
                 $responseBody = $client->request(\Magento\Framework\HTTP\ZendClient::POST)->getBody();
                 $responseBody = utf8_decode($responseBody);
-                $debugData['result'] = $responseBody;
+                $debugData['result'] = $this->filterDebugData($responseBody);
                 $this->_setCachedQuotes($request, $responseBody);
             } catch (\Exception $e) {
                 $this->_errors[$e->getCode()] = $e->getMessage();
@@ -1727,7 +1727,7 @@ class Carrier extends \Magento\Dhl\Model\AbstractDhl implements \Magento\Shippin
 
         $responseBody = $this->_getCachedQuotes($request);
         if ($responseBody === null) {
-            $debugData = ['request' => $request];
+            $debugData = ['request' => $this->filterDebugData($request)];
             try {
                 /** @var \Magento\Framework\HTTP\ZendClient $client */
                 $client = $this->_httpClientFactory->create();
@@ -1735,7 +1735,7 @@ class Carrier extends \Magento\Dhl\Model\AbstractDhl implements \Magento\Shippin
                 $client->setConfig(['maxredirects' => 0, 'timeout' => 30]);
                 $client->setRawData($request);
                 $responseBody = $client->request(\Magento\Framework\HTTP\ZendClient::POST)->getBody();
-                $debugData['result'] = $responseBody;
+                $debugData['result'] = $this->filterDebugData($responseBody);
                 $this->_setCachedQuotes($request, $responseBody);
             } catch (\Exception $e) {
                 $this->_errors[$e->getCode()] = $e->getMessage();
diff --git a/vendor/magento/module-fedex/Model/Carrier.php b/vendor/magento/module-fedex/Model/Carrier.php
index 5a25252686a..0ebb0d8f703 100644
--- a/vendor/magento/module-fedex/Model/Carrier.php
+++ b/vendor/magento/module-fedex/Model/Carrier.php
@@ -718,7 +718,7 @@ class Carrier extends AbstractCarrierOnline implements \Magento\Shipping\Model\C
 
         $responseBody = $this->_getCachedQuotes($request);
         if ($responseBody === null) {
-            $debugData = ['request' => $request];
+            $debugData = ['request' => parent::filterDebugData($request)];
             try {
                 $url = $this->getConfigData('gateway_url');
                 if (!$url) {
@@ -733,7 +733,7 @@ class Carrier extends AbstractCarrierOnline implements \Magento\Shipping\Model\C
                 $responseBody = curl_exec($ch);
                 curl_close($ch);
 
-                $debugData['result'] = $responseBody;
+                $debugData['result'] = parent::filterDebugData($responseBody);
                 $this->_setCachedQuotes($request, $responseBody);
             } catch (\Exception $e) {
                 $debugData['result'] = ['error' => $e->getMessage(), 'code' => $e->getCode()];
@@ -1073,7 +1073,7 @@ class Carrier extends AbstractCarrierOnline implements \Magento\Shipping\Model\C
         ];
         $requestString = $this->serializer->serialize($trackRequest);
         $response = $this->_getCachedQuotes($requestString);
-        $debugData = ['request' => $trackRequest];
+        $debugData = ['request' => $this->filterDebugData($trackRequest)];
         if ($response === null) {
             try {
                 $client = $this->_createTrackSoapClient();
@@ -1399,6 +1399,7 @@ class Carrier extends AbstractCarrierOnline implements \Magento\Shipping\Model\C
         $result = new \Magento\Framework\DataObject();
         $client = $this->_createShipSoapClient();
         $requestClient = $this->_formShipmentRequest($request);
+        $debugData['request'] = $this->filterDebugData($requestClient);
         $response = $client->processShipment($requestClient);
 
         if ($response->HighestSeverity != 'FAILURE' && $response->HighestSeverity != 'ERROR') {
@@ -1408,13 +1409,10 @@ class Carrier extends AbstractCarrierOnline implements \Magento\Shipping\Model\C
             );
             $result->setShippingLabelContent($shippingLabelContent);
             $result->setTrackingNumber($trackingNumber);
-            $debugData = ['request' => $client->__getLastRequest(), 'result' => $client->__getLastResponse()];
+            $debugData['result'] = $client->__getLastResponse();
             $this->_debug($debugData);
         } else {
-            $debugData = [
-                'request' => $client->__getLastRequest(),
-                'result' => ['error' => '', 'code' => '', 'xml' => $client->__getLastResponse()],
-            ];
+            $debugData['result'] = ['error' => '', 'code' => '', 'xml' => $client->__getLastResponse()];
             if (is_array($response->Notifications)) {
                 foreach ($response->Notifications as $notification) {
                     $debugData['result']['code'] .= $notification->Code . '; ';
diff --git a/vendor/magento/module-payment/Model/Method/Logger.php b/vendor/magento/module-payment/Model/Method/Logger.php
index 74068c3b6fe..90a2a94f92f 100644
--- a/vendor/magento/module-payment/Model/Method/Logger.php
+++ b/vendor/magento/module-payment/Model/Method/Logger.php
@@ -8,9 +8,7 @@ namespace Magento\Payment\Model\Method;
 use Psr\Log\LoggerInterface;
 
 /**
- * Class Logger for payment related information (request, response, etc.) which is used for debug
- *
- * @author     Magento Core Team <core@magentocommerce.com>
+ * Class Logger for payment related information (request, response, etc.) which is used for debug.
  *
  * @api
  * @since 100.0.2
@@ -69,7 +67,7 @@ class Logger
      */
     private function getDebugReplaceFields()
     {
-        if ($this->config and $this->config->getValue('debugReplaceKeys')) {
+        if ($this->config && $this->config->getValue('debugReplaceKeys')) {
             return explode(',', $this->config->getValue('debugReplaceKeys'));
         }
         return [];
@@ -82,7 +80,7 @@ class Logger
      */
     private function isDebugOn()
     {
-        return $this->config and (bool)$this->config->getValue('debug');
+        return $this->config && (bool)$this->config->getValue('debug');
     }
 
     /**
diff --git a/vendor/magento/module-payment/etc/di.xml b/vendor/magento/module-payment/etc/di.xml
index e2de2244bff..8eea32cc583 100644
--- a/vendor/magento/module-payment/etc/di.xml
+++ b/vendor/magento/module-payment/etc/di.xml
@@ -36,4 +36,22 @@
             <argument name="config" xsi:type="object">Magento\Payment\Gateway\Config\Config</argument>
         </arguments>
     </type>
+
+    <virtualType name="Magento\Payment\Model\Method\VirtualDebug" type="Magento\Framework\Logger\Handler\Base">
+        <arguments>
+            <argument name="fileName" xsi:type="string">/var/log/payment.log</argument>
+        </arguments>
+    </virtualType>
+    <virtualType name="Magento\Payment\Model\Method\VirtualLogger" type="Magento\Framework\Logger\Monolog">
+        <arguments>
+            <argument name="handlers" xsi:type="array">
+                <item name="debug" xsi:type="object">Magento\Payment\Model\Method\VirtualDebug</item>
+            </argument>
+        </arguments>
+    </virtualType>
+    <type name="Magento\Payment\Model\Method\Logger">
+        <arguments>
+            <argument name="logger" xsi:type="object">Magento\Payment\Model\Method\VirtualLogger</argument>
+        </arguments>
+    </type>
 </config>
diff --git a/vendor/magento/module-shipping/etc/di.xml b/vendor/magento/module-shipping/etc/di.xml
index 58346781570..51c77c2cecd 100644
--- a/vendor/magento/module-shipping/etc/di.xml
+++ b/vendor/magento/module-shipping/etc/di.xml
@@ -9,4 +9,22 @@
     <preference for="Magento\Quote\Model\Quote\Address\RateCollectorInterface" type="Magento\Shipping\Model\Shipping" />
     <preference for="Magento\Shipping\Model\CarrierFactoryInterface" type="Magento\Shipping\Model\CarrierFactory" />
     <preference for="Magento\Shipping\Model\Carrier\Source\GenericInterface" type="Magento\Shipping\Model\Carrier\Source\GenericDefault" />
+
+    <virtualType name="Magento\Shipping\Model\Carrier\VirtualDebug" type="Magento\Framework\Logger\Handler\Base">
+        <arguments>
+            <argument name="fileName" xsi:type="string">/var/log/shipping.log</argument>
+        </arguments>
+    </virtualType>
+    <virtualType name="Magento\Shipping\Model\Method\VirtualLogger" type="Magento\Framework\Logger\Monolog">
+        <arguments>
+            <argument name="handlers" xsi:type="array">
+                <item name="debug" xsi:type="object">Magento\Shipping\Model\Carrier\VirtualDebug</item>
+            </argument>
+        </arguments>
+    </virtualType>
+    <type name="Magento\Shipping\Model\Carrier\AbstractCarrier">
+        <arguments>
+            <argument name="logger" xsi:type="object">Magento\Shipping\Model\Method\VirtualLogger</argument>
+        </arguments>
+    </type>
 </config>
diff --git a/vendor/magento/module-ups/Model/Carrier.php b/vendor/magento/module-ups/Model/Carrier.php
index 095f4b9a5e0..3ef39eeab06 100644
--- a/vendor/magento/module-ups/Model/Carrier.php
+++ b/vendor/magento/module-ups/Model/Carrier.php
@@ -8,14 +8,15 @@
 
 namespace Magento\Ups\Model;
 
-use Magento\Quote\Model\Quote\Address\RateResult\Error;
+use Magento\Framework\HTTP\ClientFactory;
+use Magento\Framework\Xml\Security;
 use Magento\Quote\Model\Quote\Address\RateRequest;
+use Magento\Quote\Model\Quote\Address\RateResult\Error;
 use Magento\Shipping\Model\Carrier\AbstractCarrierOnline;
 use Magento\Shipping\Model\Carrier\CarrierInterface;
 use Magento\Shipping\Model\Rate\Result;
 use Magento\Shipping\Model\Simplexml\Element;
 use Magento\Ups\Helper\Config;
-use Magento\Framework\Xml\Security;
 
 /**
  * UPS shipping implementation
@@ -126,10 +127,15 @@ class Carrier extends AbstractCarrierOnline implements CarrierInterface
      * @inheritdoc
      */
     protected $_debugReplacePrivateDataKeys = [
-        'UserId', 'Password'
+        'UserId', 'Password', 'AccessLicenseNumber'
     ];
 
     /**
+     * @var ClientFactory
+     */
+    private $httpClientFactory;
+
+    /**
      * @param \Magento\Framework\App\Config\ScopeConfigInterface $scopeConfig
      * @param \Magento\Quote\Model\Quote\Address\RateResult\ErrorFactory $rateErrorFactory
      * @param \Psr\Log\LoggerInterface $logger
@@ -147,6 +153,7 @@ class Carrier extends AbstractCarrierOnline implements CarrierInterface
      * @param \Magento\CatalogInventory\Api\StockRegistryInterface $stockRegistry
      * @param \Magento\Framework\Locale\FormatInterface $localeFormat
      * @param Config $configHelper
+     * @param ClientFactory $httpClientFactory
      * @param array $data
      *
      * @SuppressWarnings(PHPMD.ExcessiveParameterList)
@@ -169,10 +176,9 @@ class Carrier extends AbstractCarrierOnline implements CarrierInterface
         \Magento\CatalogInventory\Api\StockRegistryInterface $stockRegistry,
         \Magento\Framework\Locale\FormatInterface $localeFormat,
         Config $configHelper,
+        ClientFactory $httpClientFactory,
         array $data = []
     ) {
-        $this->_localeFormat = $localeFormat;
-        $this->configHelper = $configHelper;
         parent::__construct(
             $scopeConfig,
             $rateErrorFactory,
@@ -191,6 +197,9 @@ class Carrier extends AbstractCarrierOnline implements CarrierInterface
             $stockRegistry,
             $data
         );
+        $this->httpClientFactory = $httpClientFactory;
+        $this->_localeFormat = $localeFormat;
+        $this->configHelper = $configHelper;
     }
 
     /**
@@ -315,7 +324,7 @@ class Carrier extends AbstractCarrierOnline implements CarrierInterface
 
         //for UPS, puero rico state for US will assume as puerto rico country
         if ($destCountry == self::USA_COUNTRY_ID && ($request->getDestPostcode() == '00912' ||
-            $request->getDestRegionCode() == self::PUERTORICO_COUNTRY_ID)
+                $request->getDestRegionCode() == self::PUERTORICO_COUNTRY_ID)
         ) {
             $destCountry = self::PUERTORICO_COUNTRY_ID;
         }
@@ -730,16 +739,9 @@ XMLRequest;
         if ($xmlResponse === null) {
             $debugData['request'] = $xmlParams;
             try {
-                $ch = curl_init();
-                curl_setopt($ch, CURLOPT_URL, $url);
-                curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
-                curl_setopt($ch, CURLOPT_HEADER, 0);
-                curl_setopt($ch, CURLOPT_POST, 1);
-                curl_setopt($ch, CURLOPT_POSTFIELDS, $xmlRequest);
-                curl_setopt($ch, CURLOPT_TIMEOUT, 30);
-                curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, (bool)$this->getConfigFlag('mode_xml'));
-                $xmlResponse = curl_exec($ch);
-
+                $client = $this->httpClientFactory->create();
+                $client->post($url, $xmlRequest);
+                $xmlResponse = $client->getBody();
                 $debugData['result'] = $xmlResponse;
                 $this->_setCachedQuotes($xmlRequest, $xmlResponse);
             } catch (\Exception $e) {
@@ -925,7 +927,7 @@ XMLRequest;
         $accessKey = $this->getConfigData('access_license_number');
 
         $this->_xmlAccessRequest = <<<XMLAuth
-<?xml version="1.0"?>
+<?xml version="1.0" ?>
 <AccessRequest xml:lang="en-US">
   <AccessLicenseNumber>$accessKey</AccessLicenseNumber>
   <UserId>$userId</UserId>
@@ -975,12 +977,11 @@ XMLAuth;
         $url = $this->getConfigData('tracking_xml_url');
 
         foreach ($trackings as $tracking) {
-            $xmlRequest = $this->_xmlAccessRequest;
 
             /**
              * RequestOption==>'activity' or '1' to request all activities
              */
-            $xmlRequest .= <<<XMLAuth
+            $xmlRequest = <<<XMLAuth
 <?xml version="1.0" ?>
 <TrackRequest xml:lang="en-US">
     <Request>
@@ -991,19 +992,12 @@ XMLAuth;
     <IncludeFreight>01</IncludeFreight>
 </TrackRequest>
 XMLAuth;
-            $debugData = ['request' => $xmlRequest];
-
+            $debugData['request'] = parent::filterDebugData($this->_xmlAccessRequest) . $xmlRequest;
             try {
-                $ch = curl_init();
-                curl_setopt($ch, CURLOPT_URL, $url);
-                curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
-                curl_setopt($ch, CURLOPT_HEADER, 0);
-                curl_setopt($ch, CURLOPT_POST, 1);
-                curl_setopt($ch, CURLOPT_POSTFIELDS, $xmlRequest);
-                curl_setopt($ch, CURLOPT_TIMEOUT, 30);
-                $xmlResponse = curl_exec($ch);
+                $client = $this->httpClientFactory->create();
+                $client->post($url, $this->_xmlAccessRequest . $xmlRequest);
+                $xmlResponse = $client->getBody();
                 $debugData['result'] = $xmlResponse;
-                curl_close($ch);
             } catch (\Exception $e) {
                 $debugData['result'] = ['error' => $e->getMessage(), 'code' => $e->getCode()];
                 $xmlResponse = '';
@@ -1375,21 +1369,12 @@ XMLAuth;
             }
         }
 
-        $shipmentPart->addChild(
-            'PaymentInformation'
-        )->addChild(
-            'Prepaid'
-        )->addChild(
-            'BillShipper'
-        )->addChild(
-            'AccountNumber',
-            $this->getConfigData('shipper_number')
-        );
+        $shipmentPart->addChild('PaymentInformation')
+            ->addChild('Prepaid')
+            ->addChild('BillShipper')
+            ->addChild('AccountNumber', $this->getConfigData('shipper_number'));
 
-        if ($request->getPackagingType() != $this->configHelper->getCode(
-                'container',
-                'ULE'
-            ) &&
+        if ($request->getPackagingType() != $this->configHelper->getCode('container', 'ULE') &&
             $request->getShipperAddressCountryCode() == self::USA_COUNTRY_ID &&
             ($request->getRecipientAddressCountryCode() == 'CA' ||
                 $request->getRecipientAddressCountryCode() == 'PR')
@@ -1403,10 +1388,7 @@ XMLAuth;
         $labelPart->addChild('LabelPrintMethod')->addChild('Code', 'GIF');
         $labelPart->addChild('LabelImageFormat')->addChild('Code', 'GIF');
 
-        $this->setXMLAccessRequest();
-        $xmlRequest = $this->_xmlAccessRequest . $xmlRequest->asXml();
-
-        return $xmlRequest;
+        return $xmlRequest->asXml();
     }
 
     /**
@@ -1423,18 +1405,12 @@ XMLAuth;
         $request = $xmlRequest->addChild('Request');
         $request->addChild('RequestAction', 'ShipAccept');
         $xmlRequest->addChild('ShipmentDigest', $shipmentConfirmResponse->ShipmentDigest);
-        $debugData = ['request' => $xmlRequest->asXML()];
+        $debugData = ['request' => parent::filterDebugData($this->_xmlAccessRequest) . $xmlRequest->asXML()];
 
         try {
-            $ch = curl_init($this->getShipAcceptUrl());
-            curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
-            curl_setopt($ch, CURLOPT_HEADER, 0);
-            curl_setopt($ch, CURLOPT_POST, 1);
-            curl_setopt($ch, CURLOPT_POSTFIELDS, $this->_xmlAccessRequest . $xmlRequest->asXML());
-            curl_setopt($ch, CURLOPT_TIMEOUT, 30);
-            curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, (bool)$this->getConfigFlag('mode_xml'));
-            $xmlResponse = curl_exec($ch);
-
+            $client = $this->httpClientFactory->create();
+            $client->post($this->getShipAcceptUrl(), $this->_xmlAccessRequest . $xmlRequest->asXML());
+            $xmlResponse = $client->getBody();
             $debugData['result'] = $xmlResponse;
             $this->_setCachedQuotes($xmlRequest, $xmlResponse);
         } catch (\Exception $e) {
@@ -1491,27 +1467,22 @@ XMLAuth;
     {
         $this->_prepareShipmentRequest($request);
         $result = new \Magento\Framework\DataObject();
-        $xmlRequest = $this->_formShipmentRequest($request);
+        $rawXmlRequest = $this->_formShipmentRequest($request);
+        $this->setXMLAccessRequest();
+        $xmlRequest = $this->_xmlAccessRequest . $rawXmlRequest;
         $xmlResponse = $this->_getCachedQuotes($xmlRequest);
 
         if ($xmlResponse === null) {
+            $debugData['request'] = parent::filterDebugData($this->_xmlAccessRequest) . $rawXmlRequest;
             $url = $this->getShipConfirmUrl();
-
-            $debugData = ['request' => $xmlRequest];
-            $ch = curl_init();
-            curl_setopt($ch, CURLOPT_URL, $url);
-            curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
-            curl_setopt($ch, CURLOPT_HEADER, 0);
-            curl_setopt($ch, CURLOPT_POST, 1);
-            curl_setopt($ch, CURLOPT_POSTFIELDS, $xmlRequest);
-            curl_setopt($ch, CURLOPT_TIMEOUT, 30);
-            curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, (bool)$this->getConfigFlag('mode_xml'));
-            $xmlResponse = curl_exec($ch);
-            if ($xmlResponse === false) {
-                throw new \Exception(curl_error($ch));
-            } else {
+            $client = $this->httpClientFactory->create();
+            try {
+                $client->post($url, $xmlRequest);
+                $xmlResponse = $client->getBody();
                 $debugData['result'] = $xmlResponse;
                 $this->_setCachedQuotes($xmlRequest, $xmlResponse);
+            } catch (\Exception $e) {
+                $debugData['result'] = ['code' => $e->getCode(), 'error' => $e->getMessage()];
             }
         }
 
@@ -1522,9 +1493,8 @@ XMLAuth;
             $result->setErrors($e->getMessage());
         }
 
-        if (isset(
-                $response->Response->Error
-            ) && in_array(
+        if (isset($response->Response->Error)
+            && in_array(
                 $response->Response->Error->ErrorSeverity,
                 ['Hard', 'Transient']
             )
@@ -1595,20 +1565,20 @@ XMLAuth;
                     ];
                 }
                 $containerTypes = $containerTypes + [
-                    '03' => __('UPS Tube'),
-                    '04' => __('PAK'),
-                    '2a' => __('Small Express Box'),
-                    '2b' => __('Medium Express Box'),
-                    '2c' => __('Large Express Box'),
-                ];
+                        '03' => __('UPS Tube'),
+                        '04' => __('PAK'),
+                        '2a' => __('Small Express Box'),
+                        '2b' => __('Medium Express Box'),
+                        '2c' => __('Large Express Box'),
+                    ];
             }
 
             return ['00' => __('Customer Packaging')] + $containerTypes;
         } elseif ($countryShipper == self::USA_COUNTRY_ID &&
             $countryRecipient == self::PUERTORICO_COUNTRY_ID &&
             ($method == '03' ||
-            $method == '02' ||
-            $method == '01')
+                $method == '02' ||
+                $method == '01')
         ) {
             // Container types should be the same as for domestic
             $params->setCountryRecipient(self::USA_COUNTRY_ID);
diff --git a/vendor/magento/module-usps/Model/Carrier.php b/vendor/magento/module-usps/Model/Carrier.php
index e231b78b1d8..7c6d983c56a 100644
--- a/vendor/magento/module-usps/Model/Carrier.php
+++ b/vendor/magento/module-usps/Model/Carrier.php
@@ -1027,7 +1027,7 @@ class Carrier extends AbstractCarrierOnline implements \Magento\Shipping\Model\C
 
             $api = 'TrackV2';
             $request = $xml->asXML();
-            $debugData = ['request' => $request];
+            $debugData = ['request' => $this->filterDebugData($request)];
 
             try {
                 $url = $this->getConfigData('gateway_url');
@@ -1886,7 +1886,7 @@ class Carrier extends AbstractCarrierOnline implements \Magento\Shipping\Model\C
             }
         }
 
-        $debugData = ['request' => $requestXml];
+        $debugData = ['request' => $this->filterDebugData($requestXml)];
         $url = $this->getConfigData('gateway_secure_url');
         if (!$url) {
             $url = $this->_defaultGatewayUrl;
